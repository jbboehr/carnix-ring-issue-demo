# Generated by carnix 0.6.6: carnix Cargo.lock --src . --output derivation.nix
{ lib, buildPlatform, buildRustCrate, fetchgit }:
let kernel = buildPlatform.parsed.kernel.name;
    abi = buildPlatform.parsed.abi.name;
    include = includedFiles: src: builtins.filterSource (path: type:
      lib.lists.any (f:
        let p = toString (src + ("/" + f)); in
        (path == p) || (type == "directory" && lib.strings.hasPrefix path p)
      ) includedFiles
    ) src;
    updateFeatures = f: up: functions: builtins.deepSeq f (lib.lists.foldl' (features: fun: fun features) (lib.attrsets.recursiveUpdate f up) functions);
    mapFeatures = features: map (fun: fun { features = features; });
    mkFeatures = feat: lib.lists.foldl (features: featureName:
      if feat.${featureName} or false then
        [ featureName ] ++ features
      else
        features
    ) [] (builtins.attrNames feat);
in
rec {
  carnix_ring_issue_demo = f: carnix_ring_issue_demo_0_0_0 { features = carnix_ring_issue_demo_0_0_0_features { carnix_ring_issue_demo_0_0_0 = f; }; };
  arrayvec_0_4_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "arrayvec";
    version = "0.4.7";
    authors = [ "bluss" ];
    sha256 = "0fzgv7z1x1qnyd7j32vdcadk4k9wfx897y06mr3bw1yi52iqf4z4";
    inherit dependencies buildDependencies features;
  };
  base64_0_6_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.6.0";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0ql1rmczbnww3iszc0pfc6mqa47ravpsdf525vp6s8r32nyzspl5";
    inherit dependencies buildDependencies features;
  };
  base64_0_9_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "base64";
    version = "0.9.1";
    authors = [ "Alice Maz <alice@alicemaz.com>" "Marshall Pierce <marshall@mpierce.org>" ];
    sha256 = "0fnsgkhn6aqbvvgbpcyzy1dbx840g0x5rvxdf82c5pv23knl0j0a";
    inherit dependencies buildDependencies features;
  };
  bitflags_1_0_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "bitflags";
    version = "1.0.3";
    authors = [ "The Rust Project Developers" ];
    sha256 = "162p4w4h1ad76awq6b5yivmls3d50m9cl27d8g588lsps6g8s5rw";
    inherit dependencies buildDependencies features;
  };
  byteorder_1_2_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "byteorder";
    version = "1.2.3";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" ];
    sha256 = "1xghv5f5rydzsam8lnfqhfk090i8a1knb77ikbs0ik44bvrw2ij3";
    inherit dependencies buildDependencies features;
  };
  carnix_ring_issue_demo_0_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "carnix-ring-issue-demo";
    version = "0.0.0";
    authors = [  ];
    src = ./.;
    inherit dependencies buildDependencies features;
  };
  cfg_if_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cfg-if";
    version = "0.1.3";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0hphfz5qg40gr5p18gmgy2rzkqj019lii3n0dy3s0a6lnl9106k6";
    inherit dependencies buildDependencies features;
  };
  cookie_0_9_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "cookie";
    version = "0.9.2";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0icxp7yv9vvfqfksk8ggaagvs2979gzvyhk7nnrhqg6xmib2i04g";
    inherit dependencies buildDependencies features;
  };
  crossbeam_deque_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-deque";
    version = "0.2.0";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1h3n1p1qy45b6388j3svfy1m72xlcx9j9a5y0mww6jz8fmknipnb";
    inherit dependencies buildDependencies features;
  };
  crossbeam_epoch_0_3_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-epoch";
    version = "0.3.1";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "1ljrrpvalabi3r2nnpcz7rqkbl2ydmd0mrrr2fv335f7d46xgfxa";
    inherit dependencies buildDependencies features;
  };
  crossbeam_utils_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "crossbeam-utils";
    version = "0.2.2";
    authors = [ "The Crossbeam Project Developers" ];
    sha256 = "0jiwzxv0lysjq68yk4bzkygrf69zhdidyw55nxlmimxlm6xv0j4m";
    inherit dependencies buildDependencies features;
  };
  dtoa_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "dtoa";
    version = "0.4.2";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1bxsh6fags7nr36vlz07ik2a1rzyipc8x1y30kjk832hf2pzadmw";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "0jrf4shb1699r4la8z358vri8318w4mdi6qzfqy30p2ymjlca4gk";
    inherit dependencies buildDependencies features;
  };
  fuchsia_zircon_sys_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "fuchsia-zircon-sys";
    version = "0.3.3";
    authors = [ "Raph Levien <raph@google.com>" ];
    sha256 = "08jp1zxrm9jbrr6l26bjal4dbm8bxfy57ickdgibsqxr1n9j3hf5";
    inherit dependencies buildDependencies features;
  };
  gcc_0_3_54_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "gcc";
    version = "0.3.54";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "07a5i47r8achc6gxsba3ga17h9gnh4b9a2cak8vjg4hx62aajkr4";
    inherit dependencies buildDependencies features;
  };
  httparse_1_2_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "httparse";
    version = "1.2.4";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "169grgxpsq0jaa2fk913z692a6qi8c2n1kypsay124b37720d8ll";
    inherit dependencies buildDependencies features;
  };
  hyper_0_10_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "hyper";
    version = "0.10.13";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "1ps970916ciphcx3zrqklfay1488ky6yk7kr8kvnr363v6w9wfp5";
    inherit dependencies buildDependencies features;
  };
  idna_0_1_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "idna";
    version = "0.1.4";
    authors = [ "The rust-url developers" ];
    sha256 = "15j44qgjx1skwg9i7f4cm36ni4n99b1ayx23yxx7axxcw8vjf336";
    inherit dependencies buildDependencies features;
  };
  isatty_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "isatty";
    version = "0.1.7";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1ybvy54a01p7ik2mklbb4lqggvld3xgai953jik5b0qjdzvpz2qm";
    inherit dependencies buildDependencies features;
  };
  itoa_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "itoa";
    version = "0.4.1";
    authors = [ "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1jyrsmrm5q4r2ipmq5hvvkqg0mgnlbk44lm7gr0v9ymvbrh2gbij";
    inherit dependencies buildDependencies features;
  };
  kernel32_sys_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "kernel32-sys";
    version = "0.2.2";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lrw1hbinyvr6cp28g60z97w32w8vsk6pahk64pmrv2fmby8srfj";
    libName = "kernel32";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  language_tags_0_2_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "language-tags";
    version = "0.2.2";
    authors = [ "Pyfisch <pyfisch@gmail.com>" ];
    sha256 = "1zkrdzsqzzc7509kd7nngdwrp461glm2g09kqpzaqksp82frjdvy";
    inherit dependencies buildDependencies features;
  };
  lazy_static_0_2_11_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "0.2.11";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "1x6871cvpy5b96yv4c7jvpq316fp5d4609s9py7qk6cd6x9k34vm";
    inherit dependencies buildDependencies features;
  };
  lazy_static_1_0_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "lazy_static";
    version = "1.0.0";
    authors = [ "Marvin Löbel <loebel.marvin@gmail.com>" ];
    sha256 = "0wfvqyr2nvx2mbsrscg5y7gfa9skhb8p72ayanl8vl49pw24v4fh";
    inherit dependencies buildDependencies features;
  };
  libc_0_2_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "libc";
    version = "0.2.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "1xfc39237ldzgr8x8wcflgdr8zssi3wif7g2zxc02d94gzkjsw83";
    inherit dependencies buildDependencies features;
  };
  log_0_3_9_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.3.9";
    authors = [ "The Rust Project Developers" ];
    sha256 = "19i9pwp7lhaqgzangcpw00kc3zsgcqcx84crv07xgz3v7d3kvfa2";
    inherit dependencies buildDependencies features;
  };
  log_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "log";
    version = "0.4.1";
    authors = [ "The Rust Project Developers" ];
    sha256 = "01vm8yy3wngvyj6qp1x3xpcb4xq7v67yn9l7fsma8kz28mliz90d";
    inherit dependencies buildDependencies features;
  };
  matches_0_1_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "matches";
    version = "0.1.6";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "1zlrqlbvzxdil8z8ial2ihvxjwvlvg3g8dr0lcdpsjclkclasjan";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  memchr_2_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memchr";
    version = "2.0.1";
    authors = [ "Andrew Gallant <jamslam@gmail.com>" "bluss" ];
    sha256 = "0ls2y47rjwapjdax6bp974gdp06ggm1v8d1h69wyydmh1nhgm5gr";
    inherit dependencies buildDependencies features;
  };
  memoffset_0_2_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "memoffset";
    version = "0.2.1";
    authors = [ "Gilad Naaman <gilad.naaman@gmail.com>" ];
    sha256 = "00vym01jk9slibq2nsiilgffp7n6k52a4q3n4dqp0xf5kzxvffcf";
    inherit dependencies buildDependencies features;
  };
  mime_0_2_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "mime";
    version = "0.2.6";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "1skwwa0j3kqd8rm9387zgabjhp07zj99q71nzlhba4lrz9r911b3";
    inherit dependencies buildDependencies features;
  };
  nodrop_0_1_12_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "nodrop";
    version = "0.1.12";
    authors = [ "bluss" ];
    sha256 = "1b9rxvdg8061gxjc239l9slndf0ds3m6fy2sf3gs8f9kknqgl49d";
    inherit dependencies buildDependencies features;
  };
  num_cpus_1_8_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "num_cpus";
    version = "1.8.0";
    authors = [ "Sean McArthur <sean@seanmonstar.com>" ];
    sha256 = "1y6qnd9r8ga6y8mvlabdrr73nc8cshjjlzbvnanzyj9b8zzkfwk2";
    inherit dependencies buildDependencies features;
  };
  ordermap_0_2_13_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ordermap";
    version = "0.2.13";
    authors = [ "bluss" ];
    sha256 = "1qcdv6rk0j1mah38i1asgadn6mynwbvqgj8vq730yvv2gl03fnsl";
    inherit dependencies buildDependencies features;
  };
  pear_0_0_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pear";
    version = "0.0.17";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0zkb12x0cskn65z93zwgq0wr2lm0zqh0h8d05567pghv9pr60vb4";
    inherit dependencies buildDependencies features;
  };
  pear_codegen_0_0_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "pear_codegen";
    version = "0.0.17";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0hwikjq4s1a9b69m23iv8yn497spcdhyc4b6dwcqqk7hbprry4n4";
    plugin = true;
    inherit dependencies buildDependencies features;
  };
  percent_encoding_1_0_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "percent-encoding";
    version = "1.0.1";
    authors = [ "The rust-url developers" ];
    sha256 = "04ahrp7aw4ip7fmadb0bknybmkfav0kk0gw4ps3ydq5w6hr0ib5i";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  rand_0_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rand";
    version = "0.4.2";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0h8pkg23wb67i8904sm76iyr1jlmhklb85vbpz9c9191a24xzkfm";
    inherit dependencies buildDependencies features;
  };
  rayon_0_7_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon";
    version = "0.7.1";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" ];
    sha256 = "1pwsl6h8rsaisgjbpn2v36jmslf5041dxkdyzx65jy8liyd2kyww";
    inherit dependencies buildDependencies features;
  };
  rayon_core_1_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rayon-core";
    version = "1.4.0";
    authors = [ "Niko Matsakis <niko@alum.mit.edu>" "Josh Stone <cuviper@gmail.com>" ];
    sha256 = "1gmg5fmgvhzks7b05g3ms7x8h1xxqnfkg28wvhzwpdzjljcbnr23";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  redox_syscall_0_1_37_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "redox_syscall";
    version = "0.1.37";
    authors = [ "Jeremy Soller <jackpot51@gmail.com>" ];
    sha256 = "0qa0jl9cr3qp80an8vshp2mcn8rzvwiavs1398hq1vsjw7pc3h2v";
    libName = "syscall";
    inherit dependencies buildDependencies features;
  };
  ring_0_11_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "ring";
    version = "0.11.0";
    authors = [ "Brian Smith <brian@briansmith.org>" ];
    sha256 = "1wqh3f0hsdfq8l43n4ncwqdghvv9fbldng5fsmqmnd5r5wj28g0k";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rocket_0_3_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rocket";
    version = "0.3.10";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0z2416c540489bqpn48c9w984rsi68h6mjrravg46bmymj5d1yr4";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rocket_codegen_0_3_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rocket_codegen";
    version = "0.3.10";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0syifcwm5gbya81ckw76zwrhk8k0sph1lcmcrbhzhbmrhx6xnfnn";
    plugin = true;
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  rocket_contrib_0_3_10_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "rocket_contrib";
    version = "0.3.10";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "1jifdigf0ax70n3s29i02ak2blkcp20k09xnl112vyqg4wx0z7h3";
    inherit dependencies buildDependencies features;
  };
  safemem_0_2_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "safemem";
    version = "0.2.0";
    authors = [ "Austin Bonander <austin.bonander@gmail.com>" ];
    sha256 = "058m251q202n479ip1h6s91yw3plg66vsk5mpaflssn6rs5hijdm";
    inherit dependencies buildDependencies features;
  };
  scopeguard_0_3_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "scopeguard";
    version = "0.3.3";
    authors = [ "bluss" ];
    sha256 = "0i1l013csrqzfz6c68pr5pi01hg5v5yahq8fsdmaxy6p8ygsjf3r";
    inherit dependencies buildDependencies features;
  };
  serde_1_0_55_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde";
    version = "1.0.55";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1vpslfs3j8xbl3srmzppa34h0908q0sj4hyrmlrpklhldii5vbqh";
    inherit dependencies buildDependencies features;
  };
  serde_json_1_0_17_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "serde_json";
    version = "1.0.17";
    authors = [ "Erick Tryzelaar <erick.tryzelaar@gmail.com>" "David Tolnay <dtolnay@gmail.com>" ];
    sha256 = "1q4660h8yqq5y3wkpqfzwmyvncfb2z7qqxblngs4jfi1sndi2zlz";
    inherit dependencies buildDependencies features;
  };
  smallvec_0_6_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "smallvec";
    version = "0.6.1";
    authors = [ "Simon Sapin <simon.sapin@exyr.org>" ];
    sha256 = "16m07xh67xcdpwjkbzbv9d7visxmz4fb4a8jfcrsrf333w7vkl1g";
    libPath = "lib.rs";
    inherit dependencies buildDependencies features;
  };
  state_0_4_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "state";
    version = "0.4.1";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0mkav1dcz9v0pi6rxwv0j0hhjhkzi5ssi4ld8djp0gh8lnaickk5";
    inherit dependencies buildDependencies features;
  };
  time_0_1_40_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "time";
    version = "0.1.40";
    authors = [ "The Rust Project Developers" ];
    sha256 = "0wgnbjamljz6bqxsd5axc4p2mmhkqfrryj4gf2yswjaxiw5dd01m";
    inherit dependencies buildDependencies features;
  };
  toml_0_4_6_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "toml";
    version = "0.4.6";
    authors = [ "Alex Crichton <alex@alexcrichton.com>" ];
    sha256 = "0rfl7lyb5f67spk69s604nw87f97g7fvv36hj9v88qlr2bwyrn8v";
    inherit dependencies buildDependencies features;
  };
  traitobject_0_1_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "traitobject";
    version = "0.1.0";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "10hi8pl361l539g4kg74mcrhn7grmwlar4jl528ddn2z2jvb7lw3";
    inherit dependencies buildDependencies features;
  };
  typeable_0_1_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "typeable";
    version = "0.1.2";
    authors = [ "Jonathan Reem <jonathan.reem@gmail.com>" ];
    sha256 = "0lvff10hwyy852m6r11msyv1rpgpnapn284i8dk0p0q5saqvbvnx";
    inherit dependencies buildDependencies features;
  };
  unicase_1_4_2_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicase";
    version = "1.4.2";
    authors = [ "Sean McArthur <sean.monstar@gmail.com>" ];
    sha256 = "0rbnhw2mnhcwrij3vczp0sl8zdfmvf2dlh8hly81kj7132kfj0mf";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  unicode_bidi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-bidi";
    version = "0.3.4";
    authors = [ "The Servo Project Developers" ];
    sha256 = "0lcd6jasrf8p9p0q20qyf10c6xhvw40m2c4rr105hbk6zy26nj1q";
    libName = "unicode_bidi";
    inherit dependencies buildDependencies features;
  };
  unicode_normalization_0_1_7_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "unicode-normalization";
    version = "0.1.7";
    authors = [ "kwantam <kwantam@gmail.com>" ];
    sha256 = "1da2hv800pd0wilmn4idwpgv5p510hjxizjcfv6xzb40xcsjd8gs";
    inherit dependencies buildDependencies features;
  };
  untrusted_0_5_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "untrusted";
    version = "0.5.1";
    authors = [ "Brian Smith <brian@briansmith.org>" ];
    sha256 = "10nbd2nd9asx0v2g59i188rbpclh2xjaj10cjmp8h8a7in4i9pvd";
    inherit dependencies buildDependencies features;
  };
  url_1_7_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "url";
    version = "1.7.0";
    authors = [ "The rust-url developers" ];
    sha256 = "0333ynhkp47hna88aamz1zpk4lxyzx4ab9n7yhc75g14w27cv8jj";
    inherit dependencies buildDependencies features;
  };
  version_check_0_1_3_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "version_check";
    version = "0.1.3";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0z635wdclv9bvafj11fpgndn7y79ibpsnc364pm61i1m4wwg8msg";
    inherit dependencies buildDependencies features;
  };
  winapi_0_2_8_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.2.8";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0a45b58ywf12vb7gvj6h3j264nydynmzyqz8d8rqxsj6icqv82as";
    inherit dependencies buildDependencies features;
  };
  winapi_0_3_4_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi";
    version = "0.3.4";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1qbrf5dcnd8j36cawby5d9r5vx07r0l4ryf672pfncnp8895k9lx";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_build_0_1_1_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-build";
    version = "0.1.1";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "1lxlpi87rkhxcwp2ykf1ldw3p108hwm24nywf3jfrvmff4rjhqga";
    libName = "build";
    inherit dependencies buildDependencies features;
  };
  winapi_i686_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-i686-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "05ihkij18r4gamjpxj4gra24514can762imjzlmak5wlzidplzrp";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  winapi_x86_64_pc_windows_gnu_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "winapi-x86_64-pc-windows-gnu";
    version = "0.4.0";
    authors = [ "Peter Atashian <retep998@gmail.com>" ];
    sha256 = "0n1ylmlsb8yg1v583i4xy0qmqg42275flvbc51hdqjjfjcl9vlbj";
    build = "build.rs";
    inherit dependencies buildDependencies features;
  };
  yansi_0_4_0_ = { dependencies?[], buildDependencies?[], features?[] }: buildRustCrate {
    crateName = "yansi";
    version = "0.4.0";
    authors = [ "Sergio Benitez <sb@sergio.bz>" ];
    sha256 = "0ridss6y18lmw3s1mqzfhivhmq7kcip22nbva3gy6wlsjxpdn9l7";
    inherit dependencies buildDependencies features;
  };
  arrayvec_0_4_7 = { features?(arrayvec_0_4_7_features {}) }: arrayvec_0_4_7_ {
    dependencies = mapFeatures features ([ nodrop_0_1_12 ]);
    features = mkFeatures (features.arrayvec_0_4_7 or {});
  };
  arrayvec_0_4_7_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or true);
    arrayvec_0_4_7.serde =
      (f.arrayvec_0_4_7.serde or false) ||
      (f.arrayvec_0_4_7.serde-1 or false) ||
      (arrayvec_0_4_7.serde-1 or false);
    arrayvec_0_4_7.std =
      (f.arrayvec_0_4_7.std or false) ||
      (f.arrayvec_0_4_7.default or false) ||
      (arrayvec_0_4_7.default or false);
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
  }) [ nodrop_0_1_12_features ];
  base64_0_6_0 = { features?(base64_0_6_0_features {}) }: base64_0_6_0_ {
    dependencies = mapFeatures features ([ byteorder_1_2_3 safemem_0_2_0 ]);
  };
  base64_0_6_0_features = f: updateFeatures f (rec {
    base64_0_6_0.default = (f.base64_0_6_0.default or true);
    byteorder_1_2_3.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_3_features safemem_0_2_0_features ];
  base64_0_9_1 = { features?(base64_0_9_1_features {}) }: base64_0_9_1_ {
    dependencies = mapFeatures features ([ byteorder_1_2_3 safemem_0_2_0 ]);
  };
  base64_0_9_1_features = f: updateFeatures f (rec {
    base64_0_9_1.default = (f.base64_0_9_1.default or true);
    byteorder_1_2_3.default = true;
    safemem_0_2_0.default = true;
  }) [ byteorder_1_2_3_features safemem_0_2_0_features ];
  bitflags_1_0_3 = { features?(bitflags_1_0_3_features {}) }: bitflags_1_0_3_ {
    features = mkFeatures (features.bitflags_1_0_3 or {});
  };
  bitflags_1_0_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = (f.bitflags_1_0_3.default or true);
  }) [];
  byteorder_1_2_3 = { features?(byteorder_1_2_3_features {}) }: byteorder_1_2_3_ {
    features = mkFeatures (features.byteorder_1_2_3 or {});
  };
  byteorder_1_2_3_features = f: updateFeatures f (rec {
    byteorder_1_2_3.default = (f.byteorder_1_2_3.default or true);
    byteorder_1_2_3.std =
      (f.byteorder_1_2_3.std or false) ||
      (f.byteorder_1_2_3.default or false) ||
      (byteorder_1_2_3.default or false);
  }) [];
  carnix_ring_issue_demo_0_0_0 = { features?(carnix_ring_issue_demo_0_0_0_features {}) }: carnix_ring_issue_demo_0_0_0_ {
    dependencies = mapFeatures features ([ rocket_0_3_10 rocket_codegen_0_3_10 rocket_contrib_0_3_10 ]);
  };
  carnix_ring_issue_demo_0_0_0_features = f: updateFeatures f (rec {
    carnix_ring_issue_demo_0_0_0.default = (f.carnix_ring_issue_demo_0_0_0.default or true);
    rocket_0_3_10.default = true;
    rocket_codegen_0_3_10.default = true;
    rocket_contrib_0_3_10.default = true;
  }) [ rocket_0_3_10_features rocket_codegen_0_3_10_features rocket_contrib_0_3_10_features ];
  cfg_if_0_1_3 = { features?(cfg_if_0_1_3_features {}) }: cfg_if_0_1_3_ {};
  cfg_if_0_1_3_features = f: updateFeatures f (rec {
    cfg_if_0_1_3.default = (f.cfg_if_0_1_3.default or true);
  }) [];
  cookie_0_9_2 = { features?(cookie_0_9_2_features {}) }: cookie_0_9_2_ {
    dependencies = mapFeatures features ([ time_0_1_40 ]
      ++ (if features.cookie_0_9_2.base64 or false then [ base64_0_6_0 ] else [])
      ++ (if features.cookie_0_9_2.ring or false then [ ring_0_11_0 ] else [])
      ++ (if features.cookie_0_9_2.url or false then [ url_1_7_0 ] else []));
    features = mkFeatures (features.cookie_0_9_2 or {});
  };
  cookie_0_9_2_features = f: updateFeatures f (rec {
    base64_0_6_0.default = true;
    cookie_0_9_2.base64 =
      (f.cookie_0_9_2.base64 or false) ||
      (f.cookie_0_9_2.secure or false) ||
      (cookie_0_9_2.secure or false);
    cookie_0_9_2.default = (f.cookie_0_9_2.default or true);
    cookie_0_9_2.ring =
      (f.cookie_0_9_2.ring or false) ||
      (f.cookie_0_9_2.secure or false) ||
      (cookie_0_9_2.secure or false);
    cookie_0_9_2.url =
      (f.cookie_0_9_2.url or false) ||
      (f.cookie_0_9_2.percent-encode or false) ||
      (cookie_0_9_2.percent-encode or false);
    ring_0_11_0.default = true;
    time_0_1_40.default = true;
    url_1_7_0.default = true;
  }) [ base64_0_6_0_features ring_0_11_0_features time_0_1_40_features url_1_7_0_features ];
  crossbeam_deque_0_2_0 = { features?(crossbeam_deque_0_2_0_features {}) }: crossbeam_deque_0_2_0_ {
    dependencies = mapFeatures features ([ crossbeam_epoch_0_3_1 crossbeam_utils_0_2_2 ]);
  };
  crossbeam_deque_0_2_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = (f.crossbeam_deque_0_2_0.default or true);
    crossbeam_epoch_0_3_1.default = true;
    crossbeam_utils_0_2_2.default = true;
  }) [ crossbeam_epoch_0_3_1_features crossbeam_utils_0_2_2_features ];
  crossbeam_epoch_0_3_1 = { features?(crossbeam_epoch_0_3_1_features {}) }: crossbeam_epoch_0_3_1_ {
    dependencies = mapFeatures features ([ arrayvec_0_4_7 cfg_if_0_1_3 crossbeam_utils_0_2_2 memoffset_0_2_1 nodrop_0_1_12 scopeguard_0_3_3 ]
      ++ (if features.crossbeam_epoch_0_3_1.lazy_static or false then [ lazy_static_1_0_0 ] else []));
    features = mkFeatures (features.crossbeam_epoch_0_3_1 or {});
  };
  crossbeam_epoch_0_3_1_features = f: updateFeatures f (rec {
    arrayvec_0_4_7.default = (f.arrayvec_0_4_7.default or false);
    arrayvec_0_4_7.use_union =
      (f.arrayvec_0_4_7.use_union or false) ||
      (crossbeam_epoch_0_3_1.nightly or false) ||
      (f.crossbeam_epoch_0_3_1.nightly or false);
    cfg_if_0_1_3.default = true;
    crossbeam_epoch_0_3_1.default = (f.crossbeam_epoch_0_3_1.default or true);
    crossbeam_epoch_0_3_1.lazy_static =
      (f.crossbeam_epoch_0_3_1.lazy_static or false) ||
      (f.crossbeam_epoch_0_3_1.use_std or false) ||
      (crossbeam_epoch_0_3_1.use_std or false);
    crossbeam_epoch_0_3_1.use_std =
      (f.crossbeam_epoch_0_3_1.use_std or false) ||
      (f.crossbeam_epoch_0_3_1.default or false) ||
      (crossbeam_epoch_0_3_1.default or false);
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or false);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (crossbeam_epoch_0_3_1.use_std or false) ||
      (f.crossbeam_epoch_0_3_1.use_std or false);
    lazy_static_1_0_0.default = true;
    memoffset_0_2_1.default = true;
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or false);
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or false);
  }) [ arrayvec_0_4_7_features cfg_if_0_1_3_features crossbeam_utils_0_2_2_features lazy_static_1_0_0_features memoffset_0_2_1_features nodrop_0_1_12_features scopeguard_0_3_3_features ];
  crossbeam_utils_0_2_2 = { features?(crossbeam_utils_0_2_2_features {}) }: crossbeam_utils_0_2_2_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_3 ]);
    features = mkFeatures (features.crossbeam_utils_0_2_2 or {});
  };
  crossbeam_utils_0_2_2_features = f: updateFeatures f (rec {
    cfg_if_0_1_3.default = true;
    crossbeam_utils_0_2_2.default = (f.crossbeam_utils_0_2_2.default or true);
    crossbeam_utils_0_2_2.use_std =
      (f.crossbeam_utils_0_2_2.use_std or false) ||
      (f.crossbeam_utils_0_2_2.default or false) ||
      (crossbeam_utils_0_2_2.default or false);
  }) [ cfg_if_0_1_3_features ];
  dtoa_0_4_2 = { features?(dtoa_0_4_2_features {}) }: dtoa_0_4_2_ {};
  dtoa_0_4_2_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = (f.dtoa_0_4_2.default or true);
  }) [];
  fuchsia_zircon_0_3_3 = { features?(fuchsia_zircon_0_3_3_features {}) }: fuchsia_zircon_0_3_3_ {
    dependencies = mapFeatures features ([ bitflags_1_0_3 fuchsia_zircon_sys_0_3_3 ]);
  };
  fuchsia_zircon_0_3_3_features = f: updateFeatures f (rec {
    bitflags_1_0_3.default = true;
    fuchsia_zircon_0_3_3.default = (f.fuchsia_zircon_0_3_3.default or true);
    fuchsia_zircon_sys_0_3_3.default = true;
  }) [ bitflags_1_0_3_features fuchsia_zircon_sys_0_3_3_features ];
  fuchsia_zircon_sys_0_3_3 = { features?(fuchsia_zircon_sys_0_3_3_features {}) }: fuchsia_zircon_sys_0_3_3_ {};
  fuchsia_zircon_sys_0_3_3_features = f: updateFeatures f (rec {
    fuchsia_zircon_sys_0_3_3.default = (f.fuchsia_zircon_sys_0_3_3.default or true);
  }) [];
  gcc_0_3_54 = { features?(gcc_0_3_54_features {}) }: gcc_0_3_54_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.gcc_0_3_54 or {});
  };
  gcc_0_3_54_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = (f.gcc_0_3_54.default or true);
    gcc_0_3_54.rayon =
      (f.gcc_0_3_54.rayon or false) ||
      (f.gcc_0_3_54.parallel or false) ||
      (gcc_0_3_54.parallel or false);
  }) [];
  httparse_1_2_4 = { features?(httparse_1_2_4_features {}) }: httparse_1_2_4_ {
    features = mkFeatures (features.httparse_1_2_4 or {});
  };
  httparse_1_2_4_features = f: updateFeatures f (rec {
    httparse_1_2_4.default = (f.httparse_1_2_4.default or true);
    httparse_1_2_4.std =
      (f.httparse_1_2_4.std or false) ||
      (f.httparse_1_2_4.default or false) ||
      (httparse_1_2_4.default or false);
  }) [];
  hyper_0_10_13 = { features?(hyper_0_10_13_features {}) }: hyper_0_10_13_ {
    dependencies = mapFeatures features ([ base64_0_6_0 httparse_1_2_4 language_tags_0_2_2 log_0_3_9 mime_0_2_6 num_cpus_1_8_0 time_0_1_40 traitobject_0_1_0 typeable_0_1_2 unicase_1_4_2 url_1_7_0 ]);
    features = mkFeatures (features.hyper_0_10_13 or {});
  };
  hyper_0_10_13_features = f: updateFeatures f (rec {
    base64_0_6_0.default = true;
    httparse_1_2_4.default = true;
    hyper_0_10_13.default = (f.hyper_0_10_13.default or true);
    language_tags_0_2_2.default = true;
    log_0_3_9.default = true;
    mime_0_2_6.default = true;
    num_cpus_1_8_0.default = true;
    time_0_1_40.default = true;
    traitobject_0_1_0.default = true;
    typeable_0_1_2.default = true;
    unicase_1_4_2.default = true;
    url_1_7_0.default = true;
  }) [ base64_0_6_0_features httparse_1_2_4_features language_tags_0_2_2_features log_0_3_9_features mime_0_2_6_features num_cpus_1_8_0_features time_0_1_40_features traitobject_0_1_0_features typeable_0_1_2_features unicase_1_4_2_features url_1_7_0_features ];
  idna_0_1_4 = { features?(idna_0_1_4_features {}) }: idna_0_1_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 unicode_bidi_0_3_4 unicode_normalization_0_1_7 ]);
  };
  idna_0_1_4_features = f: updateFeatures f (rec {
    idna_0_1_4.default = (f.idna_0_1_4.default or true);
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = true;
    unicode_normalization_0_1_7.default = true;
  }) [ matches_0_1_6_features unicode_bidi_0_3_4_features unicode_normalization_0_1_7_features ];
  isatty_0_1_7 = { features?(isatty_0_1_7_features {}) }: isatty_0_1_7_ {
    dependencies = (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ libc_0_2_40 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ kernel32_sys_0_2_2 winapi_0_2_8 ]) else []);
  };
  isatty_0_1_7_features = f: updateFeatures f (rec {
    isatty_0_1_7.default = (f.isatty_0_1_7.default or true);
    kernel32_sys_0_2_2.default = true;
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    winapi_0_2_8.default = true;
  }) [ redox_syscall_0_1_37_features libc_0_2_40_features kernel32_sys_0_2_2_features winapi_0_2_8_features ];
  itoa_0_4_1 = { features?(itoa_0_4_1_features {}) }: itoa_0_4_1_ {
    features = mkFeatures (features.itoa_0_4_1 or {});
  };
  itoa_0_4_1_features = f: updateFeatures f (rec {
    itoa_0_4_1.default = (f.itoa_0_4_1.default or true);
    itoa_0_4_1.std =
      (f.itoa_0_4_1.std or false) ||
      (f.itoa_0_4_1.default or false) ||
      (itoa_0_4_1.default or false);
  }) [];
  kernel32_sys_0_2_2 = { features?(kernel32_sys_0_2_2_features {}) }: kernel32_sys_0_2_2_ {
    dependencies = mapFeatures features ([ winapi_0_2_8 ]);
    buildDependencies = mapFeatures features ([ winapi_build_0_1_1 ]);
  };
  kernel32_sys_0_2_2_features = f: updateFeatures f (rec {
    kernel32_sys_0_2_2.default = (f.kernel32_sys_0_2_2.default or true);
    winapi_0_2_8.default = true;
    winapi_build_0_1_1.default = true;
  }) [ winapi_0_2_8_features winapi_build_0_1_1_features ];
  language_tags_0_2_2 = { features?(language_tags_0_2_2_features {}) }: language_tags_0_2_2_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.language_tags_0_2_2 or {});
  };
  language_tags_0_2_2_features = f: updateFeatures f (rec {
    language_tags_0_2_2.default = (f.language_tags_0_2_2.default or true);
    language_tags_0_2_2.heapsize =
      (f.language_tags_0_2_2.heapsize or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
    language_tags_0_2_2.heapsize_plugin =
      (f.language_tags_0_2_2.heapsize_plugin or false) ||
      (f.language_tags_0_2_2.heap_size or false) ||
      (language_tags_0_2_2.heap_size or false);
  }) [];
  lazy_static_0_2_11 = { features?(lazy_static_0_2_11_features {}) }: lazy_static_0_2_11_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_0_2_11 or {});
  };
  lazy_static_0_2_11_features = f: updateFeatures f (rec {
    lazy_static_0_2_11.compiletest_rs =
      (f.lazy_static_0_2_11.compiletest_rs or false) ||
      (f.lazy_static_0_2_11.compiletest or false) ||
      (lazy_static_0_2_11.compiletest or false);
    lazy_static_0_2_11.default = (f.lazy_static_0_2_11.default or true);
    lazy_static_0_2_11.nightly =
      (f.lazy_static_0_2_11.nightly or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
    lazy_static_0_2_11.spin =
      (f.lazy_static_0_2_11.spin or false) ||
      (f.lazy_static_0_2_11.spin_no_std or false) ||
      (lazy_static_0_2_11.spin_no_std or false);
  }) [];
  lazy_static_1_0_0 = { features?(lazy_static_1_0_0_features {}) }: lazy_static_1_0_0_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.lazy_static_1_0_0 or {});
  };
  lazy_static_1_0_0_features = f: updateFeatures f (rec {
    lazy_static_1_0_0.compiletest_rs =
      (f.lazy_static_1_0_0.compiletest_rs or false) ||
      (f.lazy_static_1_0_0.compiletest or false) ||
      (lazy_static_1_0_0.compiletest or false);
    lazy_static_1_0_0.default = (f.lazy_static_1_0_0.default or true);
    lazy_static_1_0_0.nightly =
      (f.lazy_static_1_0_0.nightly or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
    lazy_static_1_0_0.spin =
      (f.lazy_static_1_0_0.spin or false) ||
      (f.lazy_static_1_0_0.spin_no_std or false) ||
      (lazy_static_1_0_0.spin_no_std or false);
  }) [];
  libc_0_2_40 = { features?(libc_0_2_40_features {}) }: libc_0_2_40_ {
    features = mkFeatures (features.libc_0_2_40 or {});
  };
  libc_0_2_40_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or true);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (f.libc_0_2_40.default or false) ||
      (libc_0_2_40.default or false);
  }) [];
  log_0_3_9 = { features?(log_0_3_9_features {}) }: log_0_3_9_ {
    dependencies = mapFeatures features ([ log_0_4_1 ]);
    features = mkFeatures (features.log_0_3_9 or {});
  };
  log_0_3_9_features = f: updateFeatures f (rec {
    log_0_3_9.default = (f.log_0_3_9.default or true);
    log_0_3_9.use_std =
      (f.log_0_3_9.use_std or false) ||
      (f.log_0_3_9.default or false) ||
      (log_0_3_9.default or false);
    log_0_4_1.default = true;
    log_0_4_1.max_level_debug =
      (f.log_0_4_1.max_level_debug or false) ||
      (log_0_3_9.max_level_debug or false) ||
      (f.log_0_3_9.max_level_debug or false);
    log_0_4_1.max_level_error =
      (f.log_0_4_1.max_level_error or false) ||
      (log_0_3_9.max_level_error or false) ||
      (f.log_0_3_9.max_level_error or false);
    log_0_4_1.max_level_info =
      (f.log_0_4_1.max_level_info or false) ||
      (log_0_3_9.max_level_info or false) ||
      (f.log_0_3_9.max_level_info or false);
    log_0_4_1.max_level_off =
      (f.log_0_4_1.max_level_off or false) ||
      (log_0_3_9.max_level_off or false) ||
      (f.log_0_3_9.max_level_off or false);
    log_0_4_1.max_level_trace =
      (f.log_0_4_1.max_level_trace or false) ||
      (log_0_3_9.max_level_trace or false) ||
      (f.log_0_3_9.max_level_trace or false);
    log_0_4_1.max_level_warn =
      (f.log_0_4_1.max_level_warn or false) ||
      (log_0_3_9.max_level_warn or false) ||
      (f.log_0_3_9.max_level_warn or false);
    log_0_4_1.release_max_level_debug =
      (f.log_0_4_1.release_max_level_debug or false) ||
      (log_0_3_9.release_max_level_debug or false) ||
      (f.log_0_3_9.release_max_level_debug or false);
    log_0_4_1.release_max_level_error =
      (f.log_0_4_1.release_max_level_error or false) ||
      (log_0_3_9.release_max_level_error or false) ||
      (f.log_0_3_9.release_max_level_error or false);
    log_0_4_1.release_max_level_info =
      (f.log_0_4_1.release_max_level_info or false) ||
      (log_0_3_9.release_max_level_info or false) ||
      (f.log_0_3_9.release_max_level_info or false);
    log_0_4_1.release_max_level_off =
      (f.log_0_4_1.release_max_level_off or false) ||
      (log_0_3_9.release_max_level_off or false) ||
      (f.log_0_3_9.release_max_level_off or false);
    log_0_4_1.release_max_level_trace =
      (f.log_0_4_1.release_max_level_trace or false) ||
      (log_0_3_9.release_max_level_trace or false) ||
      (f.log_0_3_9.release_max_level_trace or false);
    log_0_4_1.release_max_level_warn =
      (f.log_0_4_1.release_max_level_warn or false) ||
      (log_0_3_9.release_max_level_warn or false) ||
      (f.log_0_3_9.release_max_level_warn or false);
    log_0_4_1.std =
      (f.log_0_4_1.std or false) ||
      (log_0_3_9.use_std or false) ||
      (f.log_0_3_9.use_std or false);
  }) [ log_0_4_1_features ];
  log_0_4_1 = { features?(log_0_4_1_features {}) }: log_0_4_1_ {
    dependencies = mapFeatures features ([ cfg_if_0_1_3 ]);
    features = mkFeatures (features.log_0_4_1 or {});
  };
  log_0_4_1_features = f: updateFeatures f (rec {
    cfg_if_0_1_3.default = true;
    log_0_4_1.default = (f.log_0_4_1.default or true);
  }) [ cfg_if_0_1_3_features ];
  matches_0_1_6 = { features?(matches_0_1_6_features {}) }: matches_0_1_6_ {};
  matches_0_1_6_features = f: updateFeatures f (rec {
    matches_0_1_6.default = (f.matches_0_1_6.default or true);
  }) [];
  memchr_2_0_1 = { features?(memchr_2_0_1_features {}) }: memchr_2_0_1_ {
    dependencies = mapFeatures features ([ ]
      ++ (if features.memchr_2_0_1.libc or false then [ libc_0_2_40 ] else []));
    features = mkFeatures (features.memchr_2_0_1 or {});
  };
  memchr_2_0_1_features = f: updateFeatures f (rec {
    libc_0_2_40.default = (f.libc_0_2_40.default or false);
    libc_0_2_40.use_std =
      (f.libc_0_2_40.use_std or false) ||
      (memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.use_std or false);
    memchr_2_0_1.default = (f.memchr_2_0_1.default or true);
    memchr_2_0_1.libc =
      (f.memchr_2_0_1.libc or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false) ||
      (f.memchr_2_0_1.use_std or false) ||
      (memchr_2_0_1.use_std or false);
    memchr_2_0_1.use_std =
      (f.memchr_2_0_1.use_std or false) ||
      (f.memchr_2_0_1.default or false) ||
      (memchr_2_0_1.default or false);
  }) [ libc_0_2_40_features ];
  memoffset_0_2_1 = { features?(memoffset_0_2_1_features {}) }: memoffset_0_2_1_ {};
  memoffset_0_2_1_features = f: updateFeatures f (rec {
    memoffset_0_2_1.default = (f.memoffset_0_2_1.default or true);
  }) [];
  mime_0_2_6 = { features?(mime_0_2_6_features {}) }: mime_0_2_6_ {
    dependencies = mapFeatures features ([ log_0_3_9 ]);
    features = mkFeatures (features.mime_0_2_6 or {});
  };
  mime_0_2_6_features = f: updateFeatures f (rec {
    log_0_3_9.default = true;
    mime_0_2_6.default = (f.mime_0_2_6.default or true);
    mime_0_2_6.heapsize =
      (f.mime_0_2_6.heapsize or false) ||
      (f.mime_0_2_6.heap_size or false) ||
      (mime_0_2_6.heap_size or false);
  }) [ log_0_3_9_features ];
  nodrop_0_1_12 = { features?(nodrop_0_1_12_features {}) }: nodrop_0_1_12_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.nodrop_0_1_12 or {});
  };
  nodrop_0_1_12_features = f: updateFeatures f (rec {
    nodrop_0_1_12.default = (f.nodrop_0_1_12.default or true);
    nodrop_0_1_12.nodrop-union =
      (f.nodrop_0_1_12.nodrop-union or false) ||
      (f.nodrop_0_1_12.use_union or false) ||
      (nodrop_0_1_12.use_union or false);
    nodrop_0_1_12.std =
      (f.nodrop_0_1_12.std or false) ||
      (f.nodrop_0_1_12.default or false) ||
      (nodrop_0_1_12.default or false);
  }) [];
  num_cpus_1_8_0 = { features?(num_cpus_1_8_0_features {}) }: num_cpus_1_8_0_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ]);
  };
  num_cpus_1_8_0_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    num_cpus_1_8_0.default = (f.num_cpus_1_8_0.default or true);
  }) [ libc_0_2_40_features ];
  ordermap_0_2_13 = { features?(ordermap_0_2_13_features {}) }: ordermap_0_2_13_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.ordermap_0_2_13 or {});
  };
  ordermap_0_2_13_features = f: updateFeatures f (rec {
    ordermap_0_2_13.default = (f.ordermap_0_2_13.default or true);
    ordermap_0_2_13.serde =
      (f.ordermap_0_2_13.serde or false) ||
      (f.ordermap_0_2_13.serde-1 or false) ||
      (ordermap_0_2_13.serde-1 or false);
  }) [];
  pear_0_0_17 = { features?(pear_0_0_17_features {}) }: pear_0_0_17_ {};
  pear_0_0_17_features = f: updateFeatures f (rec {
    pear_0_0_17.default = (f.pear_0_0_17.default or true);
  }) [];
  pear_codegen_0_0_17 = { features?(pear_codegen_0_0_17_features {}) }: pear_codegen_0_0_17_ {
    buildDependencies = mapFeatures features ([ version_check_0_1_3 yansi_0_4_0 ]);};
  pear_codegen_0_0_17_features = f: updateFeatures f (rec {
    pear_codegen_0_0_17.default = (f.pear_codegen_0_0_17.default or true);
    version_check_0_1_3.default = true;
    yansi_0_4_0.default = true;
  }) [ version_check_0_1_3_features yansi_0_4_0_features ];
  percent_encoding_1_0_1 = { features?(percent_encoding_1_0_1_features {}) }: percent_encoding_1_0_1_ {};
  percent_encoding_1_0_1_features = f: updateFeatures f (rec {
    percent_encoding_1_0_1.default = (f.percent_encoding_1_0_1.default or true);
  }) [];
  rand_0_4_2 = { features?(rand_0_4_2_features {}) }: rand_0_4_2_ {
    dependencies = (if kernel == "fuchsia" then mapFeatures features ([ fuchsia_zircon_0_3_3 ]) else [])
      ++ (if (kernel == "linux" || kernel == "darwin") then mapFeatures features ([ ]
      ++ (if features.rand_0_4_2.libc or false then [ libc_0_2_40 ] else [])) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
    features = mkFeatures (features.rand_0_4_2 or {});
  };
  rand_0_4_2_features = f: updateFeatures f (rec {
    fuchsia_zircon_0_3_3.default = true;
    libc_0_2_40.default = true;
    rand_0_4_2.default = (f.rand_0_4_2.default or true);
    rand_0_4_2.i128_support =
      (f.rand_0_4_2.i128_support or false) ||
      (f.rand_0_4_2.nightly or false) ||
      (rand_0_4_2.nightly or false);
    rand_0_4_2.libc =
      (f.rand_0_4_2.libc or false) ||
      (f.rand_0_4_2.std or false) ||
      (rand_0_4_2.std or false);
    rand_0_4_2.std =
      (f.rand_0_4_2.std or false) ||
      (f.rand_0_4_2.default or false) ||
      (rand_0_4_2.default or false);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntsecapi = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.winnt = true;
  }) [ fuchsia_zircon_0_3_3_features libc_0_2_40_features winapi_0_3_4_features ];
  rayon_0_7_1 = { features?(rayon_0_7_1_features {}) }: rayon_0_7_1_ {
    dependencies = mapFeatures features ([ rayon_core_1_4_0 ]);
    features = mkFeatures (features.rayon_0_7_1 or {});
  };
  rayon_0_7_1_features = f: updateFeatures f (rec {
    rayon_0_7_1.default = (f.rayon_0_7_1.default or true);
    rayon_core_1_4_0.default = true;
    rayon_core_1_4_0.unstable =
      (f.rayon_core_1_4_0.unstable or false) ||
      (rayon_0_7_1.unstable or false) ||
      (f.rayon_0_7_1.unstable or false);
  }) [ rayon_core_1_4_0_features ];
  rayon_core_1_4_0 = { features?(rayon_core_1_4_0_features {}) }: rayon_core_1_4_0_ {
    dependencies = mapFeatures features ([ crossbeam_deque_0_2_0 lazy_static_1_0_0 libc_0_2_40 num_cpus_1_8_0 rand_0_4_2 ]);
  };
  rayon_core_1_4_0_features = f: updateFeatures f (rec {
    crossbeam_deque_0_2_0.default = true;
    lazy_static_1_0_0.default = true;
    libc_0_2_40.default = true;
    num_cpus_1_8_0.default = true;
    rand_0_4_2.default = true;
    rayon_core_1_4_0.default = (f.rayon_core_1_4_0.default or true);
  }) [ crossbeam_deque_0_2_0_features lazy_static_1_0_0_features libc_0_2_40_features num_cpus_1_8_0_features rand_0_4_2_features ];
  redox_syscall_0_1_37 = { features?(redox_syscall_0_1_37_features {}) }: redox_syscall_0_1_37_ {};
  redox_syscall_0_1_37_features = f: updateFeatures f (rec {
    redox_syscall_0_1_37.default = (f.redox_syscall_0_1_37.default or true);
  }) [];
  ring_0_11_0 = { features?(ring_0_11_0_features {}) }: ring_0_11_0_ {
    dependencies = mapFeatures features ([ libc_0_2_40 untrusted_0_5_1 ])
      ++ (if kernel == "redox" || (kernel == "linux" || kernel == "darwin") && !(kernel == "darwin" || kernel == "ios") then mapFeatures features ([ lazy_static_0_2_11 ]) else []);
    buildDependencies = mapFeatures features ([ gcc_0_3_54 rayon_0_7_1 ]);
    features = mkFeatures (features.ring_0_11_0 or {});
  };
  ring_0_11_0_features = f: updateFeatures f (rec {
    gcc_0_3_54.default = true;
    lazy_static_0_2_11.default = true;
    libc_0_2_40.default = true;
    rayon_0_7_1.default = true;
    ring_0_11_0.default = (f.ring_0_11_0.default or true);
    ring_0_11_0.dev_urandom_fallback =
      (f.ring_0_11_0.dev_urandom_fallback or false) ||
      (f.ring_0_11_0.default or false) ||
      (ring_0_11_0.default or false);
    ring_0_11_0.use_heap =
      (f.ring_0_11_0.use_heap or false) ||
      (f.ring_0_11_0.default or false) ||
      (ring_0_11_0.default or false) ||
      (f.ring_0_11_0.rsa_signing or false) ||
      (ring_0_11_0.rsa_signing or false);
    untrusted_0_5_1.default = true;
  }) [ libc_0_2_40_features untrusted_0_5_1_features gcc_0_3_54_features rayon_0_7_1_features lazy_static_0_2_11_features ];
  rocket_0_3_10 = { features?(rocket_0_3_10_features {}) }: rocket_0_3_10_ {
    dependencies = mapFeatures features ([ base64_0_9_1 cookie_0_9_2 hyper_0_10_13 isatty_0_1_7 log_0_3_9 memchr_2_0_1 num_cpus_1_8_0 ordermap_0_2_13 pear_0_0_17 pear_codegen_0_0_17 smallvec_0_6_1 state_0_4_1 time_0_1_40 toml_0_4_6 url_1_7_0 yansi_0_4_0 ]);
    buildDependencies = mapFeatures features ([ version_check_0_1_3 yansi_0_4_0 ]);
    features = mkFeatures (features.rocket_0_3_10 or {});
  };
  rocket_0_3_10_features = f: updateFeatures f (rec {
    base64_0_9_1.default = true;
    cookie_0_9_2.default = true;
    cookie_0_9_2.percent-encode = true;
    cookie_0_9_2.secure = true;
    hyper_0_10_13.default = (f.hyper_0_10_13.default or false);
    isatty_0_1_7.default = true;
    log_0_3_9.default = true;
    memchr_2_0_1.default = true;
    num_cpus_1_8_0.default = true;
    ordermap_0_2_13.default = true;
    pear_0_0_17.default = true;
    pear_codegen_0_0_17.default = true;
    rocket_0_3_10.default = (f.rocket_0_3_10.default or true);
    rocket_0_3_10.hyper-sync-rustls =
      (f.rocket_0_3_10.hyper-sync-rustls or false) ||
      (f.rocket_0_3_10.tls or false) ||
      (rocket_0_3_10.tls or false);
    rocket_0_3_10.rustls =
      (f.rocket_0_3_10.rustls or false) ||
      (f.rocket_0_3_10.tls or false) ||
      (rocket_0_3_10.tls or false);
    smallvec_0_6_1.default = true;
    state_0_4_1.default = true;
    time_0_1_40.default = true;
    toml_0_4_6.default = true;
    url_1_7_0.default = true;
    version_check_0_1_3.default = true;
    yansi_0_4_0.default = true;
  }) [ base64_0_9_1_features cookie_0_9_2_features hyper_0_10_13_features isatty_0_1_7_features log_0_3_9_features memchr_2_0_1_features num_cpus_1_8_0_features ordermap_0_2_13_features pear_0_0_17_features pear_codegen_0_0_17_features smallvec_0_6_1_features state_0_4_1_features time_0_1_40_features toml_0_4_6_features url_1_7_0_features yansi_0_4_0_features version_check_0_1_3_features yansi_0_4_0_features ];
  rocket_codegen_0_3_10 = { features?(rocket_codegen_0_3_10_features {}) }: rocket_codegen_0_3_10_ {
    dependencies = mapFeatures features ([ log_0_3_9 rocket_0_3_10 ]);
    buildDependencies = mapFeatures features ([ version_check_0_1_3 yansi_0_4_0 ]);
  };
  rocket_codegen_0_3_10_features = f: updateFeatures f (rec {
    log_0_3_9.default = true;
    rocket_0_3_10.default = true;
    rocket_codegen_0_3_10.default = (f.rocket_codegen_0_3_10.default or true);
    version_check_0_1_3.default = true;
    yansi_0_4_0.default = true;
  }) [ log_0_3_9_features rocket_0_3_10_features version_check_0_1_3_features yansi_0_4_0_features ];
  rocket_contrib_0_3_10 = { features?(rocket_contrib_0_3_10_features {}) }: rocket_contrib_0_3_10_ {
    dependencies = mapFeatures features ([ log_0_3_9 rocket_0_3_10 ]
      ++ (if features.rocket_contrib_0_3_10.serde or false then [ serde_1_0_55 ] else [])
      ++ (if features.rocket_contrib_0_3_10.serde_json or false then [ serde_json_1_0_17 ] else []));
    features = mkFeatures (features.rocket_contrib_0_3_10 or {});
  };
  rocket_contrib_0_3_10_features = f: updateFeatures f (rec {
    log_0_3_9.default = true;
    rocket_0_3_10.default = true;
    rocket_contrib_0_3_10.default = (f.rocket_contrib_0_3_10.default or true);
    rocket_contrib_0_3_10.glob =
      (f.rocket_contrib_0_3_10.glob or false) ||
      (f.rocket_contrib_0_3_10.templates or false) ||
      (rocket_contrib_0_3_10.templates or false);
    rocket_contrib_0_3_10.handlebars =
      (f.rocket_contrib_0_3_10.handlebars or false) ||
      (f.rocket_contrib_0_3_10.handlebars_templates or false) ||
      (rocket_contrib_0_3_10.handlebars_templates or false);
    rocket_contrib_0_3_10.json =
      (f.rocket_contrib_0_3_10.json or false) ||
      (f.rocket_contrib_0_3_10.default or false) ||
      (rocket_contrib_0_3_10.default or false);
    rocket_contrib_0_3_10.rmp-serde =
      (f.rocket_contrib_0_3_10.rmp-serde or false) ||
      (f.rocket_contrib_0_3_10.msgpack or false) ||
      (rocket_contrib_0_3_10.msgpack or false);
    rocket_contrib_0_3_10.serde =
      (f.rocket_contrib_0_3_10.serde or false) ||
      (f.rocket_contrib_0_3_10.json or false) ||
      (rocket_contrib_0_3_10.json or false) ||
      (f.rocket_contrib_0_3_10.msgpack or false) ||
      (rocket_contrib_0_3_10.msgpack or false) ||
      (f.rocket_contrib_0_3_10.templates or false) ||
      (rocket_contrib_0_3_10.templates or false);
    rocket_contrib_0_3_10.serde_json =
      (f.rocket_contrib_0_3_10.serde_json or false) ||
      (f.rocket_contrib_0_3_10.json or false) ||
      (rocket_contrib_0_3_10.json or false) ||
      (f.rocket_contrib_0_3_10.templates or false) ||
      (rocket_contrib_0_3_10.templates or false);
    rocket_contrib_0_3_10.templates =
      (f.rocket_contrib_0_3_10.templates or false) ||
      (f.rocket_contrib_0_3_10.handlebars_templates or false) ||
      (rocket_contrib_0_3_10.handlebars_templates or false) ||
      (f.rocket_contrib_0_3_10.tera_templates or false) ||
      (rocket_contrib_0_3_10.tera_templates or false);
    rocket_contrib_0_3_10.tera =
      (f.rocket_contrib_0_3_10.tera or false) ||
      (f.rocket_contrib_0_3_10.tera_templates or false) ||
      (rocket_contrib_0_3_10.tera_templates or false);
    serde_1_0_55.default = true;
    serde_json_1_0_17.default = true;
  }) [ log_0_3_9_features rocket_0_3_10_features serde_1_0_55_features serde_json_1_0_17_features ];
  safemem_0_2_0 = { features?(safemem_0_2_0_features {}) }: safemem_0_2_0_ {};
  safemem_0_2_0_features = f: updateFeatures f (rec {
    safemem_0_2_0.default = (f.safemem_0_2_0.default or true);
  }) [];
  scopeguard_0_3_3 = { features?(scopeguard_0_3_3_features {}) }: scopeguard_0_3_3_ {
    features = mkFeatures (features.scopeguard_0_3_3 or {});
  };
  scopeguard_0_3_3_features = f: updateFeatures f (rec {
    scopeguard_0_3_3.default = (f.scopeguard_0_3_3.default or true);
    scopeguard_0_3_3.use_std =
      (f.scopeguard_0_3_3.use_std or false) ||
      (f.scopeguard_0_3_3.default or false) ||
      (scopeguard_0_3_3.default or false);
  }) [];
  serde_1_0_55 = { features?(serde_1_0_55_features {}) }: serde_1_0_55_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.serde_1_0_55 or {});
  };
  serde_1_0_55_features = f: updateFeatures f (rec {
    serde_1_0_55.default = (f.serde_1_0_55.default or true);
    serde_1_0_55.serde_derive =
      (f.serde_1_0_55.serde_derive or false) ||
      (f.serde_1_0_55.derive or false) ||
      (serde_1_0_55.derive or false);
    serde_1_0_55.std =
      (f.serde_1_0_55.std or false) ||
      (f.serde_1_0_55.default or false) ||
      (serde_1_0_55.default or false);
    serde_1_0_55.unstable =
      (f.serde_1_0_55.unstable or false) ||
      (f.serde_1_0_55.alloc or false) ||
      (serde_1_0_55.alloc or false);
  }) [];
  serde_json_1_0_17 = { features?(serde_json_1_0_17_features {}) }: serde_json_1_0_17_ {
    dependencies = mapFeatures features ([ dtoa_0_4_2 itoa_0_4_1 serde_1_0_55 ]);
    features = mkFeatures (features.serde_json_1_0_17 or {});
  };
  serde_json_1_0_17_features = f: updateFeatures f (rec {
    dtoa_0_4_2.default = true;
    itoa_0_4_1.default = true;
    serde_1_0_55.default = true;
    serde_json_1_0_17.default = (f.serde_json_1_0_17.default or true);
    serde_json_1_0_17.linked-hash-map =
      (f.serde_json_1_0_17.linked-hash-map or false) ||
      (f.serde_json_1_0_17.preserve_order or false) ||
      (serde_json_1_0_17.preserve_order or false);
  }) [ dtoa_0_4_2_features itoa_0_4_1_features serde_1_0_55_features ];
  smallvec_0_6_1 = { features?(smallvec_0_6_1_features {}) }: smallvec_0_6_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.smallvec_0_6_1 or {});
  };
  smallvec_0_6_1_features = f: updateFeatures f (rec {
    smallvec_0_6_1.default = (f.smallvec_0_6_1.default or true);
    smallvec_0_6_1.std =
      (f.smallvec_0_6_1.std or false) ||
      (f.smallvec_0_6_1.default or false) ||
      (smallvec_0_6_1.default or false);
  }) [];
  state_0_4_1 = { features?(state_0_4_1_features {}) }: state_0_4_1_ {
    dependencies = mapFeatures features ([]);
    features = mkFeatures (features.state_0_4_1 or {});
  };
  state_0_4_1_features = f: updateFeatures f (rec {
    state_0_4_1.default = (f.state_0_4_1.default or true);
    state_0_4_1.thread_local =
      (f.state_0_4_1.thread_local or false) ||
      (f.state_0_4_1.tls or false) ||
      (state_0_4_1.tls or false);
  }) [];
  time_0_1_40 = { features?(time_0_1_40_features {}) }: time_0_1_40_ {
    dependencies = mapFeatures features ([ libc_0_2_40 ])
      ++ (if kernel == "redox" then mapFeatures features ([ redox_syscall_0_1_37 ]) else [])
      ++ (if kernel == "windows" then mapFeatures features ([ winapi_0_3_4 ]) else []);
  };
  time_0_1_40_features = f: updateFeatures f (rec {
    libc_0_2_40.default = true;
    redox_syscall_0_1_37.default = true;
    time_0_1_40.default = (f.time_0_1_40.default or true);
    winapi_0_3_4.default = true;
    winapi_0_3_4.minwinbase = true;
    winapi_0_3_4.minwindef = true;
    winapi_0_3_4.ntdef = true;
    winapi_0_3_4.profileapi = true;
    winapi_0_3_4.std = true;
    winapi_0_3_4.sysinfoapi = true;
    winapi_0_3_4.timezoneapi = true;
  }) [ libc_0_2_40_features redox_syscall_0_1_37_features winapi_0_3_4_features ];
  toml_0_4_6 = { features?(toml_0_4_6_features {}) }: toml_0_4_6_ {
    dependencies = mapFeatures features ([ serde_1_0_55 ]);
  };
  toml_0_4_6_features = f: updateFeatures f (rec {
    serde_1_0_55.default = true;
    toml_0_4_6.default = (f.toml_0_4_6.default or true);
  }) [ serde_1_0_55_features ];
  traitobject_0_1_0 = { features?(traitobject_0_1_0_features {}) }: traitobject_0_1_0_ {};
  traitobject_0_1_0_features = f: updateFeatures f (rec {
    traitobject_0_1_0.default = (f.traitobject_0_1_0.default or true);
  }) [];
  typeable_0_1_2 = { features?(typeable_0_1_2_features {}) }: typeable_0_1_2_ {};
  typeable_0_1_2_features = f: updateFeatures f (rec {
    typeable_0_1_2.default = (f.typeable_0_1_2.default or true);
  }) [];
  unicase_1_4_2 = { features?(unicase_1_4_2_features {}) }: unicase_1_4_2_ {
    dependencies = mapFeatures features ([]);
    buildDependencies = mapFeatures features ([ version_check_0_1_3 ]);
    features = mkFeatures (features.unicase_1_4_2 or {});
  };
  unicase_1_4_2_features = f: updateFeatures f (rec {
    unicase_1_4_2.default = (f.unicase_1_4_2.default or true);
    unicase_1_4_2.heapsize =
      (f.unicase_1_4_2.heapsize or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    unicase_1_4_2.heapsize_plugin =
      (f.unicase_1_4_2.heapsize_plugin or false) ||
      (f.unicase_1_4_2.heap_size or false) ||
      (unicase_1_4_2.heap_size or false);
    version_check_0_1_3.default = true;
  }) [ version_check_0_1_3_features ];
  unicode_bidi_0_3_4 = { features?(unicode_bidi_0_3_4_features {}) }: unicode_bidi_0_3_4_ {
    dependencies = mapFeatures features ([ matches_0_1_6 ]);
    features = mkFeatures (features.unicode_bidi_0_3_4 or {});
  };
  unicode_bidi_0_3_4_features = f: updateFeatures f (rec {
    matches_0_1_6.default = true;
    unicode_bidi_0_3_4.default = (f.unicode_bidi_0_3_4.default or true);
    unicode_bidi_0_3_4.flame =
      (f.unicode_bidi_0_3_4.flame or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.flamer =
      (f.unicode_bidi_0_3_4.flamer or false) ||
      (f.unicode_bidi_0_3_4.flame_it or false) ||
      (unicode_bidi_0_3_4.flame_it or false);
    unicode_bidi_0_3_4.serde =
      (f.unicode_bidi_0_3_4.serde or false) ||
      (f.unicode_bidi_0_3_4.with_serde or false) ||
      (unicode_bidi_0_3_4.with_serde or false);
  }) [ matches_0_1_6_features ];
  unicode_normalization_0_1_7 = { features?(unicode_normalization_0_1_7_features {}) }: unicode_normalization_0_1_7_ {};
  unicode_normalization_0_1_7_features = f: updateFeatures f (rec {
    unicode_normalization_0_1_7.default = (f.unicode_normalization_0_1_7.default or true);
  }) [];
  untrusted_0_5_1 = { features?(untrusted_0_5_1_features {}) }: untrusted_0_5_1_ {};
  untrusted_0_5_1_features = f: updateFeatures f (rec {
    untrusted_0_5_1.default = (f.untrusted_0_5_1.default or true);
  }) [];
  url_1_7_0 = { features?(url_1_7_0_features {}) }: url_1_7_0_ {
    dependencies = mapFeatures features ([ idna_0_1_4 matches_0_1_6 percent_encoding_1_0_1 ]);
    features = mkFeatures (features.url_1_7_0 or {});
  };
  url_1_7_0_features = f: updateFeatures f (rec {
    idna_0_1_4.default = true;
    matches_0_1_6.default = true;
    percent_encoding_1_0_1.default = true;
    url_1_7_0.default = (f.url_1_7_0.default or true);
    url_1_7_0.encoding =
      (f.url_1_7_0.encoding or false) ||
      (f.url_1_7_0.query_encoding or false) ||
      (url_1_7_0.query_encoding or false);
    url_1_7_0.heapsize =
      (f.url_1_7_0.heapsize or false) ||
      (f.url_1_7_0.heap_size or false) ||
      (url_1_7_0.heap_size or false);
  }) [ idna_0_1_4_features matches_0_1_6_features percent_encoding_1_0_1_features ];
  version_check_0_1_3 = { features?(version_check_0_1_3_features {}) }: version_check_0_1_3_ {};
  version_check_0_1_3_features = f: updateFeatures f (rec {
    version_check_0_1_3.default = (f.version_check_0_1_3.default or true);
  }) [];
  winapi_0_2_8 = { features?(winapi_0_2_8_features {}) }: winapi_0_2_8_ {};
  winapi_0_2_8_features = f: updateFeatures f (rec {
    winapi_0_2_8.default = (f.winapi_0_2_8.default or true);
  }) [];
  winapi_0_3_4 = { features?(winapi_0_3_4_features {}) }: winapi_0_3_4_ {
    dependencies = (if kernel == "i686-pc-windows-gnu" then mapFeatures features ([ winapi_i686_pc_windows_gnu_0_4_0 ]) else [])
      ++ (if kernel == "x86_64-pc-windows-gnu" then mapFeatures features ([ winapi_x86_64_pc_windows_gnu_0_4_0 ]) else []);
    features = mkFeatures (features.winapi_0_3_4 or {});
  };
  winapi_0_3_4_features = f: updateFeatures f (rec {
    winapi_0_3_4.default = (f.winapi_0_3_4.default or true);
    winapi_i686_pc_windows_gnu_0_4_0.default = true;
    winapi_x86_64_pc_windows_gnu_0_4_0.default = true;
  }) [ winapi_i686_pc_windows_gnu_0_4_0_features winapi_x86_64_pc_windows_gnu_0_4_0_features ];
  winapi_build_0_1_1 = { features?(winapi_build_0_1_1_features {}) }: winapi_build_0_1_1_ {};
  winapi_build_0_1_1_features = f: updateFeatures f (rec {
    winapi_build_0_1_1.default = (f.winapi_build_0_1_1.default or true);
  }) [];
  winapi_i686_pc_windows_gnu_0_4_0 = { features?(winapi_i686_pc_windows_gnu_0_4_0_features {}) }: winapi_i686_pc_windows_gnu_0_4_0_ {};
  winapi_i686_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_i686_pc_windows_gnu_0_4_0.default = (f.winapi_i686_pc_windows_gnu_0_4_0.default or true);
  }) [];
  winapi_x86_64_pc_windows_gnu_0_4_0 = { features?(winapi_x86_64_pc_windows_gnu_0_4_0_features {}) }: winapi_x86_64_pc_windows_gnu_0_4_0_ {};
  winapi_x86_64_pc_windows_gnu_0_4_0_features = f: updateFeatures f (rec {
    winapi_x86_64_pc_windows_gnu_0_4_0.default = (f.winapi_x86_64_pc_windows_gnu_0_4_0.default or true);
  }) [];
  yansi_0_4_0 = { features?(yansi_0_4_0_features {}) }: yansi_0_4_0_ {};
  yansi_0_4_0_features = f: updateFeatures f (rec {
    yansi_0_4_0.default = (f.yansi_0_4_0.default or true);
  }) [];
}
